@mixin generate($prefix, $property) {
    // List of sizes to generate for each
    $sizes: [0, .25, .5, 1, 1.5, 3];

    // Spacing to multiply the sizes by
    $spacing: 1rem;
    
    // Loop through all of the sizes(we use @for rather than @each, as we want access to the index)
    @for $i from 1 through length($sizes) {
        // Get the size for the current index
        $size: nth($sizes, $i);
      
        // Create classes
        .#{$prefix}-#{$i - 1} {
            #{$property}: $spacing * $size;
        }
    }
}

$rules: [
    [ma, margin],
    [ml, margin-left],
    [mt, margin-top],
    [mb, margin-bottom],
    [mr, margin-right],
    [pa, margin],
    [pl, margin-left],
    [pt, margin-top],
    [pb, margin-bottom],
    [pr, margin-right],
];

@each $item in $rules {
    @include generate(nth($item, 1), nth($item, 2));
}